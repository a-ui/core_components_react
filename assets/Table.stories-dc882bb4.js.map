{"version":3,"file":"Table.stories-dc882bb4.js","sources":["../../../../packages/antwerp-ui/react-components/src/lib/atoms/table/TableHeader.tsx","../../../../packages/antwerp-ui/react-components/src/lib/atoms/table/TableBody.tsx","../../../../packages/antwerp-ui/react-components/src/lib/atoms/table/Table.tsx"],"sourcesContent":["import { SORT_ASCENDING, SORT_DESCENDING } from '../../../constants/settings';\nimport { classNames } from '../../../utils/dom.utils';\nimport { wrapWithIf } from '../../../utils/render.utils';\nimport { Checkbox } from '../checkbox';\nimport { TableHeaderProps } from './Table.types';\n\nexport function TableHeader({\n  columns,\n  selectable,\n  selected = [],\n  rows = [],\n  onSelectAll,\n  sort,\n  small,\n  sortDirection,\n  tableId,\n  onSortClick,\n  actions\n}: TableHeaderProps) {\n  const allSelected =\n    selected.length &&\n    selected.sort().join(',') ===\n      rows\n        .map((r) => r.id)\n        .sort()\n        .join(',');\n\n  return (\n    <thead>\n      <tr>\n        {selectable ? (\n          <th>\n            <Checkbox\n              name={`aui-table-checkbox-${tableId}-all`}\n              id={`aui-table-checkbox-${tableId}-all`}\n              checked={!!allSelected}\n              indeterminate={!!selected.length && !allSelected}\n              onChange={onSelectAll}\n              label=\"selecteren\"\n              showLabel={false}\n            />\n          </th>\n        ) : null}\n        {columns.map((col) => {\n          const thClasses = classNames({\n            'u-text-right': !!col.alignRight,\n            'is-collapsed': !!col.sortable,\n            'is-condensed': !!small\n          });\n\n          const isAscending = sort === col?.value && sortDirection === SORT_ASCENDING;\n          const isDescending = sort === col?.value && sortDirection === SORT_DESCENDING;\n\n          const thSortClasses = classNames({\n            'a-table__sort-button': true,\n            'a-table__sort-button--unsorted': sort !== col?.value,\n            'a-table__sort-button--sorted-asc': isAscending,\n            'a-table__sort-button--sorted-desc': isDescending\n          });\n\n          return (\n            <th\n              key={col?.value}\n              className={thClasses}\n              {...(col.sortable &&\n                (isAscending || isDescending) && { 'aria-sort': isAscending ? SORT_ASCENDING : SORT_DESCENDING })}\n              {...(col.sortable && { 'aria-live': 'polite' })}\n            >\n              {wrapWithIf(\n                col?.label,\n                <button onClick={(e) => onSortClick && onSortClick(col.value)} className={thSortClasses}></button>,\n                !!col?.sortable\n              )}\n            </th>\n          );\n        })}\n        {actions?.buttons?.length ? <th>{actions?.label}</th> : null}\n      </tr>\n    </thead>\n  );\n}\n\nexport default TableHeader;\n","import { SyntheticEvent } from 'react';\nimport { classNames } from '../../../utils/dom.utils';\nimport { wrapWithIf } from '../../../utils/render.utils';\nimport { Button } from '../button';\nimport { Checkbox } from '../checkbox';\nimport { TableBodyProps, TableRowSchema } from './Table.types';\n\nexport function TableBody({\n  actions,\n  columns,\n  small,\n  tableId,\n  selectable,\n  onSelect,\n  selected = [],\n  rows\n}: TableBodyProps) {\n  const rowClasses = classNames({\n    'is-clickable': !!selectable\n  });\n\n  const selectRow = (event: SyntheticEvent, row: TableRowSchema) => {\n    const target = event.target as Element;\n    if (target?.classList.contains('a-button') || target.parentElement?.parentElement?.classList.contains('a-button')) {\n      return false;\n    }\n    event.preventDefault();\n    event.stopPropagation();\n    return selectable && onSelect && onSelect(row.id);\n  };\n\n  return (\n    <tbody>\n      {rows.map((row) => (\n        <tr onClick={(e) => selectRow(e, row)} className={rowClasses} key={row?.id}>\n          {selectable ? (\n            <td>\n              <Checkbox\n                name={`aui-table-checkbox-${tableId}-${row.id}`}\n                id={`aui-table-checkbox-row-${tableId}-${row.id}`}\n                checked={(selected || []).includes(row.id)}\n                onChange={(e) => selectRow(e, row)}\n                label={row.checkboxLabel}\n                showLabel={false}\n              />\n            </td>\n          ) : null}\n          {columns.map((col) => {\n            const tdClasses = classNames({\n              'u-text-right': !!col.alignRight,\n              'u-text-bold': col.dataType === 'primary',\n              small: col.dataType === 'secondary',\n              'is-condensed': !!small\n            });\n            return (\n              <td className={tdClasses} key={col?.value}>\n                {col.transformFunction ? col.transformFunction(row[col?.value] || null) : row[col?.value] || null}\n              </td>\n            );\n          })}\n          {wrapWithIf(\n            actions?.buttons?.map((x) => (\n              <Button\n                onClick={(ev) => x?.onActionClick && x?.onActionClick(ev, row.id)}\n                key={`aui-table-action-${tableId}-${x?.id}-${row.id}`}\n                {...x}\n                id={`aui-table-action-${tableId}-${x?.id}-${row.id}`}\n                size={x?.size || 'small'}\n                children={x?.label || x?.children}\n              />\n            )) || null,\n            <td></td>,\n            !!actions?.buttons?.length\n          )}\n        </tr>\n      ))}\n    </tbody>\n  );\n}\n\nexport default TableBody;\n","import { TableProps } from './Table.types';\nimport { classNames } from '../../../utils/dom.utils';\nimport { TableHeader } from './TableHeader';\nimport { TableBody } from './TableBody';\nimport { useHorizontalScroll } from '../../../utils/custom.hooks';\n\nexport function Table({\n  id = 'aui-table',\n  sort,\n  sortDirection,\n  rows = [],\n  columns = [],\n  qa,\n  striped,\n  small,\n  open,\n  selectable,\n  selected,\n  onSelect,\n  onSelectAll,\n  onSortClick,\n  actions,\n  responsive = true,\n  fixedColumnRight,\n  fixedColumnLeft\n}: TableProps) {\n  const [scrollDivRef, handleScroll, isScrollStart, isScrollEnd] = useHorizontalScroll();\n\n  const tableClasses = classNames({\n    'a-table': true,\n    'a-table--striped': !!striped,\n    'a-table--open': !!open\n  });\n\n  const responsiveWrapperClasses = classNames({\n    'a-table-responsive-wrapper': !!responsive,\n    'has-shadow-left': !!responsive && !isScrollStart,\n    'has-shadow-right': !!responsive && !isScrollEnd,\n    'has-first-column-fixed': !!fixedColumnLeft,\n    'has-last-column-fixed': !!fixedColumnRight\n  });\n\n  const table = (\n    <table id={id} className={tableClasses} data-qa={qa}>\n      <TableHeader\n        tableId={id}\n        small={small}\n        selectable={selectable}\n        selected={selected}\n        columns={columns}\n        sort={sort}\n        rows={rows}\n        onSortClick={onSortClick}\n        sortDirection={sortDirection}\n        onSelectAll={onSelectAll}\n        actions={actions}\n      />\n      <TableBody\n        tableId={id}\n        small={small}\n        selectable={selectable}\n        selected={selected}\n        columns={columns}\n        rows={rows}\n        onSelect={onSelect}\n        actions={actions}\n      />\n    </table>\n  );\n\n  return responsive ? (\n    <div className={responsiveWrapperClasses} data-qa={qa}>\n      <div ref={scrollDivRef} onScroll={handleScroll} className=\"a-table-scrollable-wrapper\">\n        {table}\n      </div>\n    </div>\n  ) : (\n    table\n  );\n}\n\nexport default Table;\n"],"names":["TableHeader","columns","selectable","selected","rows","onSelectAll","sort","small","sortDirection","tableId","onSortClick","actions","allSelected","r","jsx","jsxs","Checkbox","col","thClasses","classNames","isAscending","SORT_ASCENDING","isDescending","SORT_DESCENDING","thSortClasses","wrapWithIf","e","_a","TableBody","onSelect","rowClasses","selectRow","event","row","target","_b","tdClasses","x","Button","ev","Table","id","qa","striped","open","responsive","fixedColumnRight","fixedColumnLeft","scrollDivRef","handleScroll","isScrollStart","isScrollEnd","useHorizontalScroll","tableClasses","responsiveWrapperClasses","table"],"mappings":"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"}