import{a as b,j as a,Q as j}from"./stories.settings-7040e2b8.js";import{R as C,r as I}from"./index-61bf1805.js";import{c as A}from"./dom.utils-26b7419a.js";import{h as B,a as T,I as q,b as w}from"./Icon-a1e4ec3d.js";import{B as W}from"./Button-7da13809.js";import"./_commonjsHelpers-de833af9.js";import"./settings-ca81cf29.js";import"./log.utils-973a80c9.js";import"./layout.settings-4161ae17.js";import"./render.utils-8c18490e.js";import"./Avatar-b42ee20c.js";import"./Spinner-5b702f63.js";function P({file:t,acceptedFormat:i,maxSize:l,onDelete:e,formatErrorLabel:m,deleteAriaLabel:s,sizeErrorLabel:y}){const o=B(t,i),d=T(t,l),p=!o||!d;return b("li",{children:[a(q,{name:o&&d?"common-file-empty":"alert-triangle"}),a("span",{className:"m-upload__filename",children:t.name}),!o&&a("span",{className:"m-upload__error",children:m}),!d&&a("span",{className:"m-upload__error",children:y}),e&&a("div",{className:"m-upload__delete",children:a(W,{ariaLabel:s,addOn:{type:"icon",iconProps:{name:"remove"}},emphasis:"low",theme:p?"danger":"neutral",size:"small",onClick:()=>e(t)})})]},t.name)}function x({acceptedFormat:t="*",deleteAriaLabel:i="Verwijder bestand",disabled:l=!1,files:e=[],formatErrorLabel:m="Dit bestandsformaat is niet toegestaan.",id:s,label:y="Sleep een bestand hier of klik om te bladeren",maxSize:o=10,maxSizeLabel:d="Maximale bestandsgrootte:",multiple:p=!0,onChange:c,onDelete:h,sizeErrorLabel:z="Maximale bestandsgrootte overschreden.",qa:D}){const g=C.useRef(null),E=r=>{h&&h(e==null?void 0:e.filter(n=>(n==null?void 0:n.name)!==r.name)),g.current&&(g.current.value="")},L=r=>{var n,_,v,V,M;if(p){const u=(n=r.target)!=null&&n.files?[...e,...Array.from(r.target.files)].filter((k,O,R)=>R.findIndex(U=>U.name===k.name)===O):[];c&&c(u,w(u,t,o))}else{const u=(v=(_=r.target)==null?void 0:_.files)!=null&&v[0]?[(M=(V=r.target)==null?void 0:V.files)==null?void 0:M[0]]:[];c&&c(u,w(u,t,o))}};return b("div",{className:A({"m-upload":!0,"is-disabled":!!l}),"data-qa":D,children:[a("div",{className:"m-upload__inner",children:b("div",{className:"m-upload__dropzone",children:[a("input",{ref:g,id:s,type:"file",multiple:p,onChange:L,accept:t,className:"m-upload__input",disabled:l,"aria-describedby":`${s}-description`}),a("div",{className:"m-upload__content",children:a("label",{htmlFor:s,className:"m-upload__message u-margin-bottom",children:y})})]})}),o&&b("small",{id:`${s}-description`,className:"m-upload__description",children:[d," ",o,"MB"]}),a("ul",{className:"m-upload__files",children:e==null?void 0:e.map(r=>a(P,{file:r,deleteAriaLabel:i,formatErrorLabel:m,sizeErrorLabel:z,onDelete:h&&E,maxSize:o,acceptedFormat:t},r==null?void 0:r.name))})]})}x.displayName="Upload";const oe={title:"React/Molecules/Upload",component:x,parameters:{docs:{description:{component:"Whenever a user needs to upload one or more files, always use our custom upload component."}}},args:{files:[],id:"aui-upload-stories",label:"Sleep een bestand hier of klik om te bladeren",multiple:!0,disabled:!1,acceptedFormat:"*",maxSize:1,maxSizeLabel:"Maximale bestandsgrootte:",formatErrorLabel:"Dit bestandsformaat is niet toegestaan.",sizeErrorLabel:"Maximale bestandsgrootte overschreden.",deleteAriaLabel:"Verwijder bestand"},argTypes:{files:{control:null,table:{type:{summary:"File[]"},defaultValue:{summary:"[]"}},description:"List of files displayed under the `Upload` component."},id:{control:{type:"text"},table:{type:{summary:"string"}},description:"ID on input element. Make sure it's unique across all `Upload` components."},label:{control:{type:"text"},description:"Override default text of upload zone. This can be rich text (ReactElement).",table:{type:{summary:"ReactElement | string"},defaultValue:{summary:"Sleep een bestand hier of klik om te bladeren"}}},multiple:{control:{type:"boolean"},description:"Sets `multiple` attribute on `input`.",table:{type:{summary:"boolean"},defaultValue:{summary:!0}}},disabled:{control:{type:"boolean"},description:"Disables the input.",table:{type:{summary:"boolean"},defaultValue:{summary:!1}}},acceptedFormat:{control:{type:"text"},description:"Allows to set accepted format. Should be MIME type or `.ext`, accepts wildcard when using MIME types, like `image/*`.",table:{type:{summary:"string"},defaultValue:{summary:"*"}}},maxSize:{control:{type:"number"},description:"Sets maximum allowed size for single file (in MB). 10MB by default.",table:{type:{summary:"number"},defaultValue:{summary:10}}},onChange:{control:{type:"function"},table:{type:{summary:"function"}},action:"onChange",description:"Handler for change of uploaded files. Fires on native file input user action. Will pass array of all unique files. When `multiple=false` it will return an array with a single file. The second argument is an array of validations for the current files (`{validSize: boolean, validFormat: boolean}[]`)."},onDelete:{control:{type:"function"},table:{type:{summary:"function"}},action:"onDelete",description:"Handler for the deletion of uploaded files. Will pass the filtered files in argument (without the deleted one)."},maxSizeLabel:{control:{type:"text"},description:"Override default text of the maximum size notice.",table:{type:{summary:"string"},defaultValue:{summary:"Maximale bestandsgrootte:"}}},formatErrorLabel:{control:{type:"text"},description:"Override default text of the format error notice.",table:{type:{summary:"string"},defaultValue:{summary:"Dit bestandsformaat is niet toegestaan."}}},sizeErrorLabel:{control:{type:"text"},description:"Override default text of the size error notice.",table:{type:{summary:"string"},defaultValue:{summary:"Maximale bestandsgrootte overschreden."}}},deleteAriaLabel:{control:{type:"text"},description:"Override the `aria-label` attribute on the file removal button.",table:{type:{summary:"string"},defaultValue:{summary:"Verwijder bestand"}}},qa:j}},H=t=>{const[i,l]=I.useState([]);return a(x,{...t,files:i,onChange:(e,m)=>{t.onChange(e,m),l(e)},onDelete:e=>{t.onDelete(e),l(e)}})},f=H.bind({});var N,F,S;f.parameters={...f.parameters,docs:{...(N=f.parameters)==null?void 0:N.docs,source:{originalSource:`args => {
  const [files, setFiles] = useState([]);
  return <Upload {...args} files={files} onChange={(f, v) => {
    args.onChange(f, v);
    setFiles(f);
  }} onDelete={f => {
    args.onDelete(f);
    setFiles(f);
  }} />;
}`,...(S=(F=f.parameters)==null?void 0:F.docs)==null?void 0:S.source}}};const le=["upload"];export{le as __namedExportsOrder,oe as default,f as upload};
//# sourceMappingURL=Upload.stories-daca1ce5.js.map
