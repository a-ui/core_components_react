{"version":3,"file":"TextArea.stories-0d07776c.js","sources":["../../../../packages/antwerp-ui/react-components/src/lib/atoms/input/text-area/TextArea.tsx"],"sourcesContent":["import { classNames } from '../../../../utils/dom.utils';\nimport { DEFAULT_SIZE, SIZE_MAP, State } from '../../../../constants/layout.settings';\nimport { useState } from 'react';\nimport { renderCharacterCounter, renderDescription, renderLabel } from '../input.renders';\nimport { TextAreaProps } from '../Input.types';\n\nexport function TextArea({\n  charCounter,\n  charCountText = '%count% / %max%',\n  description,\n  disabled,\n  id = 'aui-text-area',\n  inline,\n  label,\n  maxLength,\n  name,\n  onChange,\n  qa,\n  readOnly,\n  required,\n  size,\n  state,\n  value,\n  onBlur,\n  onClick,\n  onFocus,\n  onKeyDown,\n  onKeyUp\n}: TextAreaProps) {\n  const [characterCount, setCharacterCount] = useState(value ? value.length : 0);\n  const inputClasses = classNames({\n    'a-input': true,\n    'a-input--inline': !!inline,\n    [`a-input--${SIZE_MAP[size || DEFAULT_SIZE]}`]: !!size,\n    'has-error': state === State.ERROR\n  });\n\n  const wrapperClasses = classNames({\n    'a-input__wrapper': true,\n    'a-input__wrapper--inline': !!inline\n  });\n\n  const _handleChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setCharacterCount(event.target.value.length);\n    return onChange && onChange(event);\n  };\n\n  return (\n    <div className={inputClasses} data-qa={qa}>\n      {renderLabel({ label, id, required, inline })}\n      {renderDescription({ id, description, state })}\n      <div className={wrapperClasses}>\n        <textarea\n          value={value}\n          name={name}\n          id={id}\n          disabled={disabled}\n          readOnly={readOnly}\n          required={required}\n          {...(charCounter && maxLength ? { 'aria-describedby': `${id}--counter` } : {})}\n          {...(description ? { 'aria-describedby': `${id}--description` } : {})}\n          maxLength={maxLength}\n          onChange={_handleChange}\n          onBlur={onBlur}\n          onClick={onClick}\n          onFocus={onFocus}\n          onKeyDown={onKeyDown}\n          onKeyUp={onKeyUp}\n        ></textarea>\n      </div>\n      {renderCharacterCounter({\n        id,\n        charCountText,\n        charCounter,\n        characterCount: value ? value.length : characterCount,\n        maxLength\n      })}\n    </div>\n  );\n}\n\nexport default TextArea;\n"],"names":["TextArea","charCounter","charCountText","description","disabled","id","inline","label","maxLength","name","onChange","qa","readOnly","required","size","state","value","onBlur","onClick","onFocus","onKeyDown","onKeyUp","characterCount","setCharacterCount","useState","inputClasses","classNames","SIZE_MAP","DEFAULT_SIZE","State","wrapperClasses","_handleChange","event","jsxs","renderLabel","renderDescription","jsx","renderCharacterCounter"],"mappings":"oZAMO,SAASA,EAAS,CACvB,YAAAC,EACA,cAAAC,EAAgB,kBAChB,YAAAC,EACA,SAAAC,EACA,GAAAC,EAAK,gBACL,OAAAC,EACA,MAAAC,EACA,UAAAC,EACA,KAAAC,EACA,SAAAC,EACA,GAAAC,EACA,SAAAC,EACA,SAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,OAAAC,EACA,QAAAC,EACA,QAAAC,EACA,UAAAC,EACA,QAAAC,CACF,EAAkB,CACV,KAAA,CAACC,EAAgBC,CAAiB,EAAIC,EAAAA,SAASR,EAAQA,EAAM,OAAS,CAAC,EACvES,EAAeC,EAAW,CAC9B,UAAW,GACX,kBAAmB,CAAC,CAACpB,EACrB,CAAC,YAAYqB,EAASb,GAAQc,CAAY,CAAC,EAAE,EAAG,CAAC,CAACd,EAClD,YAAaC,IAAUc,EAAM,KAAA,CAC9B,EAEKC,EAAiBJ,EAAW,CAChC,mBAAoB,GACpB,2BAA4B,CAAC,CAACpB,CAAA,CAC/B,EAEKyB,EAAiBC,IACHT,EAAAS,EAAM,OAAO,MAAM,MAAM,EACpCtB,GAAYA,EAASsB,CAAK,GAGnC,OACGC,EAAA,MAAA,CAAI,UAAWR,EAAc,UAASd,EACpC,SAAA,CAAAuB,EAAY,CAAE,MAAA3B,EAAO,GAAAF,EAAI,SAAAQ,EAAU,OAAAP,EAAQ,EAC3C6B,EAAkB,CAAE,GAAA9B,EAAI,YAAAF,EAAa,MAAAY,EAAO,EAC7CqB,EAAC,MAAI,CAAA,UAAWN,EACd,SAAAM,EAAC,WAAA,CACC,MAAApB,EACA,KAAAP,EACA,GAAAJ,EACA,SAAAD,EACA,SAAAQ,EACA,SAAAC,EACC,GAAIZ,GAAeO,EAAY,CAAE,mBAAoB,GAAGH,CAAE,WAAY,EAAI,CAAC,EAC3E,GAAIF,EAAc,CAAE,mBAAoB,GAAGE,CAAE,eAAA,EAAoB,CAAC,EACnE,UAAAG,EACA,SAAUuB,EACV,OAAAd,EACA,QAAAC,EACA,QAAAC,EACA,UAAAC,EACA,QAAAC,CAAA,CAAA,EAEJ,EACCgB,EAAuB,CACtB,GAAAhC,EACA,cAAAH,EACA,YAAAD,EACA,eAAgBe,EAAQA,EAAM,OAASM,EACvC,UAAAd,CAAA,CACD,CACH,CAAA,CAAA,CAEJ"}